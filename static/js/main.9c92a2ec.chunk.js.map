{"version":3,"sources":["Square.js","Broad.js","Rule.js","CheckerGame.js","serviceWorker.js","index.js"],"names":["Square","props","className","onClick","value","style","color","Broad","state","squares","mobility","team","reachable","i","j","this","SquareValue","handleClick","first_step","square","direction","size","length","k","dx","dy","from","setReachable","x0","y0","moveChecker","temp","JSON","parse","stringify","cleanSquare","setState","console","log","walkable","table","map","step","move1","row","move2","key","renderSquare","Component","Rule","width","href","target","CheckerGame","Array","fill","history","nextX","stepnum","slice","current","concat","status","move","desc","jumpTo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9c92a2ec.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css'\n\nimport AdbIcon from '@material-ui/icons/Adb';\nimport AndroidIcon from '@material-ui/icons/Android';\nimport GpsNotFixedIcon from '@material-ui/icons/GpsNotFixed';\n\n\nexport default function Square(props) {\n\n    function chooseIcon(value){\n        if (value === 1) return <AdbIcon />\n        if (value === 7) return <AndroidIcon />\n        if (value === 2) return <AdbIcon style={{ color: '#ff0000' }} />\n        if (value === 9) return <AndroidIcon style={{ color: '#ff0000' }} />\n        if (value === 3) return <GpsNotFixedIcon style={{ color: '#ffff00' }} />\n        \n    }\n    \n    return (\n        <button className = \"square\"\n            onClick = { props.onClick }>\n                {/*props.value*/}\n                {chooseIcon(props.value)}\n        </button>\n    )\n}\n\n","import React, { Component } from 'react'\nimport Square from './Square'\nimport './App.css'\n\n\nexport class Broad extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {squares: this.props.squares}\n    }\n\n    SquareValue(value){\n        //console.log(value)\n        if (!value || value.mobility === null) return null\n        const team = value.team\n        const mobility = value.mobility\n\n        if (value.reachable) return 3\n        if (team === 0 && mobility === 0) return 1;\n        if (team === 0 && mobility === 1) return 7;\n        if (team === 1 && mobility === 0) return 2;\n        if (team === 1 && mobility === 1) return 9;\n\n    }\n\n    renderSquare(i,j){\n        //console.log(i, j)\n        //console.log(this.props.squares[i][j])\n        \n        return <Square value = { this.SquareValue(this.state.squares[i][j])}\n                onClick = { ()=>{this.handleClick(i,j)} }/>\n    }\n\n    setReachable(i,j,team,mobility,first_step,square){\n        var direction\n        if (mobility === 1) direction = [ [1,1],[1,-1],[-1,1],[-1,-1] ]\n        else if (team === 0) direction = [ [1,1],[1,-1] ]\n        else direction = [ [-1,1],[-1,-1] ]\n        const size = square.length\n        for(let k = 0; k < direction.length; k++){\n            let dx = direction[k][0]\n            let dy = direction[k][1]\n            if ( i + dx < 0 || i + dx >= size || j + dy < 0 || j + dy >= size  ) continue\n            let value = square[i+dx][j+dy]\n            if (!value && first_step) {\n                square[i+dx][j+dy] = {reachable: true, from: [i,j]}\n            }\n            if ( i + 2*dx < 0 || i + 2*dx >= size || j + 2*dy < 0 || j + 2*dy >= size  )continue\n            else if (value && value.team !== team && !square[i+2*dx][j+2*dy]) {\n                square[i+2*dx][j+2*dy] = {reachable: true, from: [i,j]}\n                this.setReachable(i+2*dx,j+2*dy,team,mobility,false,square)\n            } \n        }\n    }\n\n    moveChecker(i,j, squares){  \n        if (!squares[i][j].reachable) return\n        let x0 = squares[i][j].from[0]\n        let y0 = squares[i][j].from[1]\n        this.moveChecker(x0,y0,squares)\n        let temp = squares[i][j]\n        squares[i][j] = squares[x0][y0]\n        squares[x0][y0] = temp\n        if (i-x0 === 2 || x0 - i === 2) squares[(i+x0)/2][(j+y0)/2] = null\n    }\n\n    cleanSquare(squares){\n        const size = squares.length\n        for (let i = 0; i < size; i++){\n            for (let j = 0; j < size; j++){\n                if (squares[i][j] && squares[i][j].reachable) squares[i][j] = null\n            }\n        }\n        for (let j = 0; j < size; j++){\n            if (squares[0][j] && squares[0][j].team) squares[0][j].mobility = 1\n            if (squares[size-1][j] && !squares[size-1][j].team) squares[size-1][j].mobility = 1\n        }\n\n    }\n\n    handleClick(i,j){\n        var squares = JSON.parse(JSON.stringify(this.state.squares))\n        \n        const team = this.props.team? 0: 1\n        if ( !squares[i][j] ) {\n            this.cleanSquare(squares)\n            this.setState({squares:squares})\n            return\n        }\n\n        if (squares[i][j].reachable ){\n            console.log('move')\n            this.moveChecker(i,j, squares)\n            this.cleanSquare(squares)\n            this.setState({squares:squares})\n            this.props.onClick(squares)\n        }\n        else if (squares[i][j].team === team ){\n            this.setState( {squares: squares} )\n            squares = JSON.parse(JSON.stringify(this.props.squares))\n            this.setReachable(i,j,team,squares[i][j].mobility, true ,squares)\n            this.setState({ squares: squares})\n        }else{\n            this.cleanSquare(squares)\n            this.setState({squares:squares})\n            return\n        }\n    }\n\n    lastStep(){\n        console.log(this.props.squares)\n        console.log(this.state.squares)\n        //this.props.last()\n        this.setState({ squares: this.props.squares})\n    }\n\n    goBack(){\n\n    }\n\n\n    render() {\n\n        var walkable = true;\n\n        const table = this.state.squares.map( (step,move1)=>{\n            if (this.state.squares.length%2 === 0) walkable = !walkable\n            const row = step.map( (step,move2) =>{\n                let reachable = this.state.squares[move1[move2]] && this.state.squares[move1[move2]].reachable\n                let className = reachable? 'reachable': (walkable? 'walkable': 'nonwalkable')\n                walkable = ! walkable\n                return <td key = {move2} \n                        className = {className} \n                        >{this.renderSquare(move1,move2)}</td>\n            } )\n            return(\n                <tr key = {move1}>{row}</tr>\n            )\n        } )\n\n        return (\n            <div className = 'leftside'>\n            <table>\n                <tbody>\n                    {table}\n                </tbody>\n            </table>\n            {/*<button onClick = {()=>{this.lastStep()}} >Update</button>*/}\n            { /*<button onClick = {()=>{this.goBack()}} >Back</button> */}\n            </div>\n        )\n    }\n}\n\nexport default Broad","import React from 'react'\nimport AndroidIcon from '@material-ui/icons/Android';\n\n\nexport default function Rule() {\n    return (\n        <div style = {{width : 500}} >\n            <h1>Game Rule of Checkers</h1>\n            <h2>Taking a Turn</h2>\n            <p>Each player takes their turn by moving a piece. Pieces are always moved diagonally and can be moved in the following ways:</p>\n            <ul>\n                <li>Diagonally in the forward direction (towards the opponent) to the next empty square.</li>\n                <li>If there is one of the opponent's pieces next to a piece and an empty space on the other side, you jump your opponent and remove their piece. You can do multiple jumps if they are lined up in the forward direction.</li>\n            </ul>\n            <h2>King Pieces  <AndroidIcon /> </h2>\n            <p>The last row is called the king row. If you get a piece across the board to the opponent's king row, that piece becomes a king. King pieces can move in both directions, forward and backward.</p>\n            <h2>Winning</h2>\n            <p>You win the game when the opponent has no more pieces or can't move.</p>\n\n            \n            <a href=\"https://www.ducksters.com/games/checkers_rules.php\" target=\"_blank\" > <p>Reference</p> </a>\n            \n\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport './App.css'\nimport Broad from './Broad'\nimport Rule from './Rule'\n\n\n\n\nexport default class CheckerGame extends Component {\n\n    constructor(props){\n        super(props)\n        const size = 8\n        let squares = new Array(size)\n        for (let i = 0; i < size; i++){\n            squares[i] = Array(size).fill(null)\n        } \n        // initial value\n        var walkable = true\n        for (let i = 0; i < size; i++){\n            if (size%2 === 0) walkable = !walkable\n            for (let j =0; j < size; j++){\n                walkable = ! walkable\n                if (walkable) {\n                    if (i < 3) squares[i][j] = {team : 0, mobility: 0}\n                    if (i >= size - 3) squares[i][j] = {team : 1, mobility: 0}\n                }\n            }\n        }\n        this.state = {\n            history: [ { squares: squares, nextX: true,} ], \n            stepnum: 0,    \n        }\n    }\n\n    handleClick(squares){\n        const history = this.state.history.slice(0,this.state.stepnum + 1)\n        const current = history[history.length -1]\n        //const squares = JSON.parse(JSON.stringify(current.squares))\n        //const team = current.nextX ? 0 : 1\n        \n        //console.log(squares)\n        this.setState(\n            { history: history.concat([{squares: squares, nextX: !current.nextX,},]),\n              stepnum: history.length\n        })\n    }\n\n    jumpTo(step){\n        this.setState({\n            history:this.state.history.slice(0, this.state.stepnum + 1),\n            stepnum: step,\n        })\n    }\n\n\n    render() {\n\n        const history = this.state.history.slice(0, this.state.stepnum + 1)\n        const current = history[history.length -1]\n        var status =  'Player: ' + (current.nextX? 'Black':'Red')\n       \n        const moves = history.map( (step,move)=>{\n            const desc = (move? 'Go to move #'+ move +' by '+ (step.nextX? 'Red':'Black') : 'start' )\n            return(\n                <li key = {move}>\n                    <buttun onClick = { ()=>this.jumpTo(move) } > {desc}  </buttun>\n                </li>\n            )\n        } )\n\n        return (\n            <>\n            <div className=\"game\">\n            <div className=\"game-board\">\n            \n                <Broad squares = {current.squares}\n                    team = {current.nextX}\n                    onClick = { (squares)=> this.handleClick(squares) } />\n                <div><h1>{status}</h1></div>\n                {/*<ul>{moves}</ul>*/}\n            </div>\n                <div className=\"game-info\">\n                    <Rule />\n                </div>\n            </div>\n            \n            \n            </>\n            \n        )\n    }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport CheckerGame from './CheckerGame'\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <CheckerGame />\n  </React.StrictMode>,\n  document.getElementById('root')\n  \n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}